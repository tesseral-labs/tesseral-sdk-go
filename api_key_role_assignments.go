// This file was auto-generated by Fern from our API Definition.

package tesseral

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/tesseral-labs/tesseral-sdk-go/internal"
)

type CreateAPIKeyRoleAssignmentRequest struct {
	APIKeyRoleAssignment *APIKeyRoleAssignment `json:"apiKeyRoleAssignment,omitempty" url:"-"`
}

type APIKeyRoleAssignmentsDeleteAPIKeyRoleAssignmentRequest struct {
	APIKeyID *string `json:"-" url:"apiKeyId,omitempty"`
}

type APIKeyRoleAssignmentsListAPIKeyRoleAssignmentsRequest struct {
	APIKeyID  *string `json:"-" url:"apiKeyId,omitempty"`
	PageToken *string `json:"-" url:"pageToken,omitempty"`
}

type APIKeyRoleAssignment struct {
	// The API Key Role Assignment ID. Starts with `api_key_role_assignment_...`.
	ID *string `json:"id,omitempty" url:"id,omitempty"`
	// The API Key ID.
	APIKeyID *string `json:"apiKeyId,omitempty" url:"apiKeyId,omitempty"`
	// The Role ID.
	RoleID *string `json:"roleId,omitempty" url:"roleId,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *APIKeyRoleAssignment) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *APIKeyRoleAssignment) GetAPIKeyID() *string {
	if a == nil {
		return nil
	}
	return a.APIKeyID
}

func (a *APIKeyRoleAssignment) GetRoleID() *string {
	if a == nil {
		return nil
	}
	return a.RoleID
}

func (a *APIKeyRoleAssignment) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *APIKeyRoleAssignment) UnmarshalJSON(data []byte) error {
	type unmarshaler APIKeyRoleAssignment
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = APIKeyRoleAssignment(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *APIKeyRoleAssignment) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type CreateAPIKeyRoleAssignmentResponse struct {
	APIKeyRoleAssignment *APIKeyRoleAssignment `json:"apiKeyRoleAssignment,omitempty" url:"apiKeyRoleAssignment,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *CreateAPIKeyRoleAssignmentResponse) GetAPIKeyRoleAssignment() *APIKeyRoleAssignment {
	if c == nil {
		return nil
	}
	return c.APIKeyRoleAssignment
}

func (c *CreateAPIKeyRoleAssignmentResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateAPIKeyRoleAssignmentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateAPIKeyRoleAssignmentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateAPIKeyRoleAssignmentResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateAPIKeyRoleAssignmentResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type DeleteAPIKeyRoleAssignmentResponse struct {
	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DeleteAPIKeyRoleAssignmentResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DeleteAPIKeyRoleAssignmentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DeleteAPIKeyRoleAssignmentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DeleteAPIKeyRoleAssignmentResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DeleteAPIKeyRoleAssignmentResponse) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type ListAPIKeyRoleAssignmentsResponse struct {
	APIKeyRoleAssignments []*APIKeyRoleAssignment `json:"apiKeyRoleAssignments,omitempty" url:"apiKeyRoleAssignments,omitempty"`
	NextPageToken         *string                 `json:"nextPageToken,omitempty" url:"nextPageToken,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListAPIKeyRoleAssignmentsResponse) GetAPIKeyRoleAssignments() []*APIKeyRoleAssignment {
	if l == nil {
		return nil
	}
	return l.APIKeyRoleAssignments
}

func (l *ListAPIKeyRoleAssignmentsResponse) GetNextPageToken() *string {
	if l == nil {
		return nil
	}
	return l.NextPageToken
}

func (l *ListAPIKeyRoleAssignmentsResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListAPIKeyRoleAssignmentsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListAPIKeyRoleAssignmentsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListAPIKeyRoleAssignmentsResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListAPIKeyRoleAssignmentsResponse) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

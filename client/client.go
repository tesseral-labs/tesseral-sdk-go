// This file was auto-generated by Fern from our API Definition.

package client

import (
	apikeyroleassignments "github.com/tesseral-labs/tesseral-sdk-go/apikeyroleassignments"
	apikeys "github.com/tesseral-labs/tesseral-sdk-go/apikeys"
	auditlogevents "github.com/tesseral-labs/tesseral-sdk-go/auditlogevents"
	core "github.com/tesseral-labs/tesseral-sdk-go/core"
	internal "github.com/tesseral-labs/tesseral-sdk-go/internal"
	oidcconnections "github.com/tesseral-labs/tesseral-sdk-go/oidcconnections"
	option "github.com/tesseral-labs/tesseral-sdk-go/option"
	organizations "github.com/tesseral-labs/tesseral-sdk-go/organizations"
	passkeys "github.com/tesseral-labs/tesseral-sdk-go/passkeys"
	projects "github.com/tesseral-labs/tesseral-sdk-go/projects"
	roles "github.com/tesseral-labs/tesseral-sdk-go/roles"
	samlconnections "github.com/tesseral-labs/tesseral-sdk-go/samlconnections"
	scimapikeys "github.com/tesseral-labs/tesseral-sdk-go/scimapikeys"
	sessions "github.com/tesseral-labs/tesseral-sdk-go/sessions"
	userinvites "github.com/tesseral-labs/tesseral-sdk-go/userinvites"
	userroleassignments "github.com/tesseral-labs/tesseral-sdk-go/userroleassignments"
	users "github.com/tesseral-labs/tesseral-sdk-go/users"
	http "net/http"
	os "os"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	APIKeyRoleAssignments *apikeyroleassignments.Client
	APIKeys               *apikeys.Client
	AuditLogEvents        *auditlogevents.Client
	OidcConnections       *oidcconnections.Client
	Organizations         *organizations.Client
	Passkeys              *passkeys.Client
	Projects              *projects.Client
	Roles                 *roles.Client
	SAMLConnections       *samlconnections.Client
	ScimApiKeys           *scimapikeys.Client
	Sessions              *sessions.Client
	UserInvites           *userinvites.Client
	UserRoleAssignments   *userroleassignments.Client
	Users                 *users.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	if options.BackendAPIKey == "" {
		options.BackendAPIKey = os.Getenv("TESSERAL_BACKEND_API_KEY")
	}
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:                options.ToHeader(),
		APIKeyRoleAssignments: apikeyroleassignments.NewClient(opts...),
		APIKeys:               apikeys.NewClient(opts...),
		AuditLogEvents:        auditlogevents.NewClient(opts...),
		OidcConnections:       oidcconnections.NewClient(opts...),
		Organizations:         organizations.NewClient(opts...),
		Passkeys:              passkeys.NewClient(opts...),
		Projects:              projects.NewClient(opts...),
		Roles:                 roles.NewClient(opts...),
		SAMLConnections:       samlconnections.NewClient(opts...),
		ScimApiKeys:           scimapikeys.NewClient(opts...),
		Sessions:              sessions.NewClient(opts...),
		UserInvites:           userinvites.NewClient(opts...),
		UserRoleAssignments:   userroleassignments.NewClient(opts...),
		Users:                 users.NewClient(opts...),
	}
}

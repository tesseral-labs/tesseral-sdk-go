// This file was auto-generated by Fern from our API Definition.

package client

import (
	core "github.com/tesseral-labs/tesseral-sdk-go/core"
	internal "github.com/tesseral-labs/tesseral-sdk-go/internal"
	option "github.com/tesseral-labs/tesseral-sdk-go/option"
	organizations "github.com/tesseral-labs/tesseral-sdk-go/organizations"
	passkeys "github.com/tesseral-labs/tesseral-sdk-go/passkeys"
	projects "github.com/tesseral-labs/tesseral-sdk-go/projects"
	samlconnections "github.com/tesseral-labs/tesseral-sdk-go/samlconnections"
	scimapikeys "github.com/tesseral-labs/tesseral-sdk-go/scimapikeys"
	sessions "github.com/tesseral-labs/tesseral-sdk-go/sessions"
	userinvites "github.com/tesseral-labs/tesseral-sdk-go/userinvites"
	users "github.com/tesseral-labs/tesseral-sdk-go/users"
	http "net/http"
	os "os"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	Organizations   *organizations.Client
	Passkeys        *passkeys.Client
	Projects        *projects.Client
	SAMLConnections *samlconnections.Client
	ScimApiKeys     *scimapikeys.Client
	Sessions        *sessions.Client
	UserInvites     *userinvites.Client
	Users           *users.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	if options.BackendAPIKey == "" {
		options.BackendAPIKey = os.Getenv("TESSERAL_BACKEND_API_KEY")
	}
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:          options.ToHeader(),
		Organizations:   organizations.NewClient(opts...),
		Passkeys:        passkeys.NewClient(opts...),
		Projects:        projects.NewClient(opts...),
		SAMLConnections: samlconnections.NewClient(opts...),
		ScimApiKeys:     scimapikeys.NewClient(opts...),
		Sessions:        sessions.NewClient(opts...),
		UserInvites:     userinvites.NewClient(opts...),
		Users:           users.NewClient(opts...),
	}
}

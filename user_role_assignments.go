// This file was auto-generated by Fern from our API Definition.

package tesseral

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/tesseral-labs/tesseral-sdk-go/internal"
)

type UserRoleAssignmentsListUserRoleAssignmentsRequest struct {
	UserID    *string `json:"-" url:"userId,omitempty"`
	RoleID    *string `json:"-" url:"roleId,omitempty"`
	PageToken *string `json:"-" url:"pageToken,omitempty"`
}

type CreateUserRoleAssignmentResponse struct {
	UserRoleAssignment *UserRoleAssignment `json:"userRoleAssignment,omitempty" url:"userRoleAssignment,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *CreateUserRoleAssignmentResponse) GetUserRoleAssignment() *UserRoleAssignment {
	if c == nil {
		return nil
	}
	return c.UserRoleAssignment
}

func (c *CreateUserRoleAssignmentResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CreateUserRoleAssignmentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler CreateUserRoleAssignmentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CreateUserRoleAssignmentResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *CreateUserRoleAssignmentResponse) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type DeleteUserRoleAssignmentResponse struct {
	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DeleteUserRoleAssignmentResponse) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DeleteUserRoleAssignmentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler DeleteUserRoleAssignmentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DeleteUserRoleAssignmentResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DeleteUserRoleAssignmentResponse) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type GetUserRoleAssignmentResponse struct {
	UserRoleAssignment *UserRoleAssignment `json:"userRoleAssignment,omitempty" url:"userRoleAssignment,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GetUserRoleAssignmentResponse) GetUserRoleAssignment() *UserRoleAssignment {
	if g == nil {
		return nil
	}
	return g.UserRoleAssignment
}

func (g *GetUserRoleAssignmentResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetUserRoleAssignmentResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetUserRoleAssignmentResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetUserRoleAssignmentResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetUserRoleAssignmentResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type ListUserRoleAssignmentsResponse struct {
	UserRoleAssignments []*UserRoleAssignment `json:"userRoleAssignments,omitempty" url:"userRoleAssignments,omitempty"`
	NextPageToken       *string               `json:"nextPageToken,omitempty" url:"nextPageToken,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListUserRoleAssignmentsResponse) GetUserRoleAssignments() []*UserRoleAssignment {
	if l == nil {
		return nil
	}
	return l.UserRoleAssignments
}

func (l *ListUserRoleAssignmentsResponse) GetNextPageToken() *string {
	if l == nil {
		return nil
	}
	return l.NextPageToken
}

func (l *ListUserRoleAssignmentsResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListUserRoleAssignmentsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListUserRoleAssignmentsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListUserRoleAssignmentsResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListUserRoleAssignmentsResponse) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

// UserRoleAssignment represents a User being assigned to a Role.
type UserRoleAssignment struct {
	// The User Role Assignment ID. Starts with `user_role_assignment_...`.
	ID *string `json:"id,omitempty" url:"id,omitempty"`
	// The User ID.
	UserID *string `json:"userId,omitempty" url:"userId,omitempty"`
	// The Role ID.
	RoleID *string `json:"roleId,omitempty" url:"roleId,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *UserRoleAssignment) GetID() *string {
	if u == nil {
		return nil
	}
	return u.ID
}

func (u *UserRoleAssignment) GetUserID() *string {
	if u == nil {
		return nil
	}
	return u.UserID
}

func (u *UserRoleAssignment) GetRoleID() *string {
	if u == nil {
		return nil
	}
	return u.RoleID
}

func (u *UserRoleAssignment) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UserRoleAssignment) UnmarshalJSON(data []byte) error {
	type unmarshaler UserRoleAssignment
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserRoleAssignment(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserRoleAssignment) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}
